{"ast":null,"code":"import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport BookingsScreen from \"../screens/BookingsScreen\";\nimport historyScreen from \"../screens/HistoryScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar bookingName = 'Home';\nvar historyName = 'History';\nvar profileName = \"Profile\";\nvar Tab = createBottomTabNavigator();\n\nfunction MainContainer() {\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: bookingName,\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n          var rn = route.name;\n\n          if (rn === bookingName) {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (rn === profileName) {\n            iconName = focused ? 'person' : 'person-outline';\n          } else if (rn === historyName) {\n            iconName = focused ? 'list' : 'list-outline';\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        headerShown: false\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'grey',\n      labelStyle: {\n        paddingBottom: 10,\n        fontSize: 10\n      },\n      style: {\n        padding: 10,\n        height: 70\n      }\n    },\n    children: [_jsx(Tab.Screen, {\n      name: bookingName,\n      component: BookingsScreen\n    }), _jsx(Tab.Screen, {\n      name: historyName,\n      component: historyScreen\n    }), _jsx(Tab.Screen, {\n      name: profileName,\n      component: ProfileScreen\n    })]\n  });\n}\n\nexport default MainContainer;","map":{"version":3,"sources":["C:/Users/Client/Documents/GitHub/he-hotel/navigation/screens/MainContainer.jsx"],"names":["React","NavigationContainer","createBottomTabNavigator","Ionicons","BookingsScreen","historyScreen","ProfileScreen","bookingName","historyName","profileName","Tab","MainContainer","route","tabBarIcon","focused","color","size","iconName","rn","name","headerShown","activeTintColor","inactiveTintColor","labelStyle","paddingBottom","fontSize","style","padding","height"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,QAAP;AAEA,OAAOC,cAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;;;AAMA,IAAMC,WAAW,GAAG,MAApB;AACA,IAAMC,WAAW,GAAG,SAApB;AACA,IAAMC,WAAW,GAAG,SAApB;AAEA,IAAMC,GAAG,GAAGR,wBAAwB,EAApC;;AAEA,SAASS,aAAT,GAAwB;AACpB,SACQ,MAAC,GAAD,CAAK,SAAL;AACE,IAAA,gBAAgB,EAAEJ,WADpB;AAEE,IAAA,aAAa,EAAE;AAAA,UAAGK,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC7BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AACxC,cAAIC,QAAJ;AACA,cAAIC,EAAE,GAAGN,KAAK,CAACO,IAAf;;AAEA,cAAGD,EAAE,KAAKX,WAAV,EACE;AACIU,YAAAA,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;AACH,WAHH,MAIO,IAAII,EAAE,KAAKT,WAAX,EACL;AACEQ,YAAAA,QAAQ,GAAGH,OAAO,GAAG,QAAH,GAAc,gBAAhC;AACD,WAHI,MAIA,IAAII,EAAE,KAAKV,WAAX,EACL;AACES,YAAAA,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;AAED;;AACD,iBAAO,KAAC,QAAD;AAAU,YAAA,IAAI,EAAEG,QAAhB;AAA0B,YAAA,IAAI,EAAED,IAAhC;AAAsC,YAAA,KAAK,EAAED;AAA7C,YAAP;AACH,SAnB4B;AAoB7BK,QAAAA,WAAW,EAAC;AApBiB,OAAhB;AAAA,KAFjB;AAwBE,IAAA,aAAa,EAAE;AACbC,MAAAA,eAAe,EAAE,QADJ;AAEbC,MAAAA,iBAAiB,EAAE,MAFN;AAGbC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,aAAa,EAAE,EAAjB;AAAqBC,QAAAA,QAAQ,EAAE;AAA/B,OAHC;AAIbC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,EAAX;AAAeC,QAAAA,MAAM,EAAE;AAAvB;AAJM,KAxBjB;AAAA,eAgCC,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAIrB,WAApB;AAAiC,MAAA,SAAS,EAAIH;AAA9C,MAhCD,EAiCC,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAII,WAApB;AAAiC,MAAA,SAAS,EAAIH;AAA9C,MAjCD,EAkCC,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAII,WAApB;AAAiC,MAAA,SAAS,EAAIH;AAA9C,MAlCD;AAAA,IADR;AAyCH;;AACD,eAAeK,aAAf","sourcesContent":["\r\nimport * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\nimport BookingsScreen from '../screens/BookingsScreen';\r\nimport historyScreen from '../screens/HistoryScreen';\r\nimport ProfileScreen from '../screens/ProfileScreen';\r\n\r\n// import BookingsScreen from './navigation/screens/BookingsScreen';\r\n// // import HistoryScreen from './navigation/screens/HistoryScreen';\r\n// import ProfileScreen from './navigation/screens/ProfileScreen';\r\n\r\nconst bookingName = 'Home';\r\nconst historyName = 'History';\r\nconst profileName = \"Profile\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction MainContainer(){\r\n    return(\r\n            <Tab.Navigator\r\n              initialRouteName={bookingName}\r\n              screenOptions={({ route }) => ({\r\n                tabBarIcon: ({ focused, color, size }) => {\r\n                  let iconName;\r\n                  let rn = route.name;\r\n\r\n                  if(rn === bookingName)\r\n                    {\r\n                        iconName = focused ? 'home' : 'home-outline';\r\n                    } \r\n                    else if (rn === profileName)\r\n                    {\r\n                      iconName = focused ? 'person' : 'person-outline';\r\n                    }\r\n                    else if (rn === historyName)\r\n                    {\r\n                      iconName = focused ? 'list' : 'list-outline';  \r\n                    \r\n                    }\r\n                    return <Ionicons name={iconName} size={size} color={color} />;\r\n                },\r\n                headerShown:false\r\n              })}\r\n              tabBarOptions={{\r\n                activeTintColor: 'tomato',\r\n                inactiveTintColor: 'grey',\r\n                labelStyle: { paddingBottom: 10, fontSize: 10 },\r\n                style: { padding: 10, height: 70}\r\n              }}>\r\n            \r\n\r\n             <Tab.Screen name = {bookingName} component = {BookingsScreen}/>\r\n             <Tab.Screen name = {historyName} component = {historyScreen}/>\r\n             <Tab.Screen name = {profileName} component = {ProfileScreen}/>\r\n                    \r\n\r\n                     \r\n         </Tab.Navigator>\r\n    );\r\n}\r\nexport default MainContainer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
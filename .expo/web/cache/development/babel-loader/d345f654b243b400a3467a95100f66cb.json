{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width;\n\nimport houses from \"../../src/consts/houses\";\nimport colors from \"../../src/consts/colors\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var categoryList = [\"All\"];\n\n  var ListCategories = function ListCategories() {\n    var _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        selectedCategoryIndex = _React$useState2[0],\n        setSelectedCategoryIndex = _React$useState2[1];\n\n    return _jsx(View, {\n      style: style.categoryListContainer,\n      children: categoryList.map(function (category, index) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setSelectedCategoryIndex(index);\n          },\n          children: _jsx(Text, {\n            style: [style.categoryListText, index == selectedCategoryIndex && style.activeCategoryListText],\n            children: category\n          })\n        }, index);\n      })\n    });\n  };\n\n  var Card = function Card(_ref2) {\n    var house = _ref2.house;\n    return _jsx(TouchableOpacity, {\n      activeOpacity: 0.8,\n      onPress: function onPress() {\n        return navigation.navigate(\"DetailsScreen\", house);\n      },\n      children: _jsxs(View, {\n        style: style.card,\n        children: [_jsx(Image, {\n          source: house.image,\n          style: style.cardImage\n        }), _jsxs(View, {\n          style: {\n            marginTop: 10\n          },\n          children: [_jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              marginTop: 10\n            },\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 16,\n                fontWeight: \"bold\"\n              },\n              children: \"Rome Suites\"\n            }), _jsx(Text, {\n              style: {\n                fontWeight: \"bold\",\n                color: colors.purple,\n                fontSize: 16\n              },\n              children: \"R3,500\"\n            })]\n          }), _jsx(Text, {\n            style: {\n              color: colors.grey,\n              fontSize: 14,\n              marginTop: 5\n            },\n            children: \"Polokwane Central\"\n          }), _jsxs(View, {\n            style: {\n              marginTop: 10,\n              flexDirection: \"row\"\n            },\n            children: [_jsxs(View, {\n              style: style.facility,\n              children: [_jsx(Icon, {\n                name: \"hotel\",\n                size: 18\n              }), _jsx(Text, {\n                style: style.facilityText,\n                children: \"2\"\n              })]\n            }), _jsxs(View, {\n              style: style.facility,\n              children: [_jsx(Icon, {\n                name: \"bathtub\",\n                size: 18\n              }), _jsx(Text, {\n                style: style.facilityText,\n                children: \"2\"\n              })]\n            }), _jsxs(View, {\n              style: style.facility,\n              children: [_jsx(Icon, {\n                name: \"aspect-ratio\",\n                size: 18\n              }), _jsx(Text, {\n                style: style.facilityText,\n                children: \"100m\"\n              })]\n            })]\n          })]\n        })]\n      })\n    });\n  };\n};\n\nvar _useState = useState(new Date()),\n    _useState2 = _slicedToArray(_useState, 2),\n    mydate = _useState2[0],\n    setDate = _useState2[1];\n\nvar _useState3 = useState('date'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    displaymode = _useState4[0],\n    setMode = _useState4[1];\n\nvar changeSelectedDate = function changeSelectedDate(event, selectedDate) {\n  var currentDate = selectedDate || mydate;\n  setDate(currentDate);\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDisplayDate = _useState6[0],\n      setShow = _useState6[1];\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var displayDatepicker = function displayDatepicker() {\n    showMode('date');\n    setShow(true);\n  };\n\n  return _jsxs(View, {\n    style: {\n      backgroundColor: colors.white,\n      flex: 1\n    },\n    children: [_jsx(StatusBar, {\n      translucent: false,\n      backgroundColor: colors.white,\n      barStyle: \"dark-content\"\n    }), _jsxs(View, {\n      style: style.header,\n      children: [_jsx(Text, {\n        style: {\n          color: colors.dark,\n          fontSize: 10,\n          fontWeight: \"bold\"\n        },\n        children: \"Welcome Elizabeth\"\n      }), _jsx(Image, {\n        style: style.profileImage,\n        source: require(\"../../src/assets/person.jpg\")\n      })]\n    }), _jsx(View, {\n      children: _jsx(Text, {\n        style: {\n          paddingLeft: 20,\n          color: colors.grey,\n          fontSize: 25,\n          fontStyle: 'italic'\n        },\n        children: \"Find exclusive deals, and much more...\"\n      })\n    }), _jsxs(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          paddingHorizontal: 100,\n          paddingVertical: 0,\n          paddingLeft: 20\n        },\n        children: [_jsxs(View, {\n          style: style.searchInputContainer,\n          children: [_jsx(Icon, {\n            name: \"search\",\n            color: colors.grey,\n            size: 25\n          }), _jsx(TextInput, {\n            placeholder: \" Where to?  \"\n          })]\n        }), _jsx(View, {\n          style: style.sortBtn,\n          children: _jsx(Icon, {\n            name: \"tune\",\n            color: colors.white,\n            size: 30\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Map\");\n          },\n          activeOpacity: 0.7,\n          style: {\n            padding: 10\n          },\n          children: _jsx(Text, {\n            style: {\n              textAlign: \"left\",\n              fontStyle: \"italic\",\n              color: \"purple\"\n            },\n            children: \"Choose on map\"\n          })\n        })]\n      }), _jsx(ListCategories, {}), _jsx(FlatList, {\n        snapToInterval: width - 20,\n        showsHorizontalScrollIndicator: false,\n        contentContainerStyle: {\n          paddingLeft: 20,\n          paddingVertical: 20\n        },\n        horizontal: true,\n        data: houses,\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _jsx(Card, {\n            house: item\n          });\n        }\n      })]\n    }), _jsx(Button, {\n      onPress: displayDatepicker,\n      title: \"Show date\"\n    }), isDisplayDate ? _jsx(DateTimePicker, {\n      testID: \"dateTimePicker\",\n      value: mydate,\n      mode: displaymode,\n      is24Hour: true,\n      display: \"default\",\n      onChange: changeSelectedDate\n    }) : null]\n  });\n};\n\nvar style = StyleSheet.create({\n  header: {\n    paddingVertical: 20,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 20\n  },\n  profileImage: {\n    height: 50,\n    width: 50,\n    borderRadius: 25,\n    paddingRight: 40\n  },\n  searchInputContainer: {\n    height: 50,\n    backgroundColor: colors.light,\n    flex: 5,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingHorizontal: 10,\n    borderRadius: 12\n  },\n  sortBtn: {\n    backgroundColor: colors.grey,\n    height: 50,\n    width: 50,\n    borderRadius: 12,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  mapBtn: {\n    backgroundColor: colors.grey,\n    height: 50,\n    width: 50,\n    borderRadius: 12,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  optionsCard: {\n    height: 210,\n    width: width / 2 - 30,\n    elevation: 15,\n    alignItems: \"center\",\n    backgroundColor: colors.white,\n    borderRadius: 20,\n    paddingTop: 10,\n    paddingHorizontal: 10\n  },\n  optionsCardImage: {\n    height: 140,\n    borderRadius: 10,\n    width: \"100%\"\n  },\n  optionListsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 20,\n    paddingHorizontal: 20\n  },\n  categoryListText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    paddingBottom: 5,\n    color: colors.grey\n  },\n  activeCategoryListText: {\n    color: colors.dark,\n    borderBottomWidth: 1,\n    paddingBottom: 5\n  },\n  categoryListContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 40,\n    paddingHorizontal: 40\n  },\n  card: {\n    height: 250,\n    backgroundColor: colors.white,\n    elevation: 10,\n    width: width - 40,\n    marginRight: 20,\n    padding: 15,\n    borderRadius: 20\n  },\n  cardImage: {\n    width: \"100%\",\n    height: 120,\n    borderRadius: 15\n  },\n  facility: {\n    flexDirection: \"row\",\n    marginRight: 15\n  },\n  facilityText: {\n    marginLeft: 5,\n    color: colors.grey\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["C:/Users/Client/Documents/GitHub/he-hotel/navigation/screens/BookingsScreen.jsx"],"names":["React","useState","Icon","Dimensions","get","width","houses","colors","DateTimePicker","HomeScreen","navigation","categoryList","ListCategories","selectedCategoryIndex","setSelectedCategoryIndex","style","categoryListContainer","map","category","index","categoryListText","activeCategoryListText","Card","house","navigate","card","image","cardImage","marginTop","flexDirection","justifyContent","fontSize","fontWeight","color","purple","grey","facility","facilityText","Date","mydate","setDate","displaymode","setMode","changeSelectedDate","event","selectedDate","currentDate","isDisplayDate","setShow","showMode","currentMode","displayDatepicker","backgroundColor","white","flex","header","dark","profileImage","require","paddingLeft","fontStyle","paddingHorizontal","paddingVertical","searchInputContainer","sortBtn","padding","textAlign","item","StyleSheet","create","height","borderRadius","paddingRight","light","alignItems","mapBtn","optionsCard","elevation","paddingTop","optionsCardImage","optionListsContainer","paddingBottom","borderBottomWidth","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  SafeAreaView,\r\n  View,\r\n  StatusBar,\r\n  Text,\r\n  TextInput,\r\n  FlatList,\r\n  Dimensions,\r\n  StyleSheet,\r\n  Image,\r\n  ScrollView,\r\n  TouchableOpacity,Button\r\n} from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/MaterialIcons\";\r\nconst { width } = Dimensions.get(\"screen\");\r\nimport houses from \"../../src/consts/houses\";\r\nimport colors from \"../../src/consts/colors\";\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  const categoryList = [\"All\"];\r\n\r\n  const ListCategories = () => {\r\n    const [selectedCategoryIndex, setSelectedCategoryIndex] = React.useState(0);\r\n\r\n \r\n\r\n  \r\n    return (\r\n      <View style={style.categoryListContainer}>\r\n        {categoryList.map((category, index) => (\r\n          <TouchableOpacity\r\n            key={index}\r\n            onPress={() => setSelectedCategoryIndex(index)}\r\n          >\r\n            <Text\r\n              style={[\r\n                style.categoryListText,\r\n                index == selectedCategoryIndex && style.activeCategoryListText,\r\n              ]}\r\n            >\r\n              {category}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n\r\n\r\n      </View>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const Card = ({ house }) => {\r\n    return (\r\n      <TouchableOpacity\r\n        activeOpacity={0.8}\r\n        onPress={() => navigation.navigate(\"DetailsScreen\", house)}\r\n      >\r\n        <View style={style.card}>\r\n          {/* House image */}\r\n          <Image source={house.image} style={style.cardImage} />\r\n          <View style={{ marginTop: 10 }}>\r\n            {/* Title and price container */}\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                marginTop: 10,\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 16, fontWeight: \"bold\" }}>\r\n                Rome Suites\r\n              </Text>\r\n              <Text\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  color: colors.purple,\r\n                  fontSize: 16,\r\n                }}\r\n              >\r\n                R3,500\r\n              </Text>\r\n            </View>\r\n\r\n            {/* Location text */}\r\n\r\n            <Text style={{ color: colors.grey, fontSize: 14, marginTop: 5 }}>\r\n              Polokwane Central\r\n            </Text>\r\n\r\n            {/* Facilities container */}\r\n            <View style={{ marginTop: 10, flexDirection: \"row\" }}>\r\n              <View style={style.facility}>\r\n                <Icon name=\"hotel\" size={18} />\r\n                <Text style={style.facilityText}>2</Text>\r\n              </View>\r\n              <View style={style.facility}>\r\n                <Icon name=\"bathtub\" size={18} />\r\n                <Text style={style.facilityText}>2</Text>\r\n              </View>\r\n              <View style={style.facility}>\r\n                <Icon name=\"aspect-ratio\" size={18} />\r\n                <Text style={style.facilityText}>100m</Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n\r\n};\r\n\r\n  const [mydate, setDate] = useState(new Date());\r\n  const [displaymode, setMode] = useState('date');\r\n  const changeSelectedDate = (event, selectedDate) => {\r\n  const currentDate = selectedDate || mydate;\r\n  setDate(currentDate);\r\n  const [isDisplayDate, setShow] = useState(false);\r\n \r\n\r\n const showMode = (currentMode) => {\r\n  setShow(true);\r\n  setMode(currentMode);\r\n};\r\n\r\nconst displayDatepicker = () => {\r\n  showMode('date');\r\n  setShow(true);\r\n};\r\n\r\n  return (\r\n    <View style={{ backgroundColor: colors.white, flex: 1 }}>\r\n      {/* Customise status bar */}\r\n      <StatusBar\r\n        translucent={false}\r\n        backgroundColor={colors.white}\r\n        barStyle=\"dark-content\"\r\n      />\r\n      {/* Header container */}\r\n      <View style={style.header}>\r\n        <Text style={{ color: colors.dark, fontSize: 10, fontWeight: \"bold\" }}>\r\n         Welcome Elizabeth\r\n        </Text>\r\n        <Image\r\n          style={style.profileImage}\r\n          source={require(\"../../src/assets/person.jpg\")}\r\n        />\r\n\r\n       \r\n      </View>\r\n\r\n      <View>\r\n          <Text style={{ paddingLeft: 20,color: colors.grey,fontSize:25,fontStyle: 'italic' }}>\r\n            Find exclusive deals, and much more...\r\n          </Text>\r\n        </View>\r\n      <ScrollView showsVerticalScrollIndicator={false}>\r\n        {/* Input and sort button container */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            paddingHorizontal: 100,\r\n            paddingVertical: 0,\r\n            paddingLeft: 20,\r\n          }}\r\n        >\r\n\r\n        \r\n          <View style={style.searchInputContainer}>\r\n            <Icon name=\"search\" color={colors.grey} size={25} />\r\n            <TextInput placeholder=\" Where to?  \" />\r\n          </View>\r\n\r\n          {/*             \r\n         \r\n          <View style={style.mapBtn}>\r\n            <Icon name=\"place\" color={colors.black} size={25} />\r\n          </View> */}\r\n\r\n          <View style={style.sortBtn}>\r\n            <Icon name=\"tune\" color={colors.white} size={30} />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            onPress={() => navigation.navigate(\"Map\")}\r\n            activeOpacity={0.7}\r\n            style={{ padding: 10 }}\r\n          >\r\n            <Text\r\n              style={{ textAlign: \"left\", fontStyle: \"italic\", color: \"purple\" }}\r\n            >\r\n              Choose on map\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {/* Render categories */}\r\n        <ListCategories />\r\n\r\n        {/* Render Card */}\r\n        <FlatList\r\n          snapToInterval={width - 20}\r\n          showsHorizontalScrollIndicator={false}\r\n          contentContainerStyle={{ paddingLeft: 20, paddingVertical: 20 }}\r\n          horizontal\r\n          data={houses}\r\n          renderItem={({ item }) => <Card house={item} />}\r\n        />\r\n      \r\n      </ScrollView>\r\n\r\n      <Button onPress={displayDatepicker} title=\"Show date\" />\r\n        \r\n      {isDisplayDate ? \r\n                  <DateTimePicker\r\n                     testID=\"dateTimePicker\"\r\n                     value={mydate}\r\n                     mode={displaymode}\r\n                     is24Hour={true}\r\n                     display=\"default\"\r\n                     onChange={changeSelectedDate}\r\n            />\r\n         :null}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst style = StyleSheet.create({\r\n  header: {\r\n    paddingVertical: 20,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    paddingHorizontal: 20,\r\n  },\r\n  profileImage: {\r\n    height: 50,\r\n    width: 50,\r\n    borderRadius: 25,\r\n    paddingRight: 40,\r\n  },\r\n  searchInputContainer: {\r\n    height: 50,\r\n\r\n    backgroundColor: colors.light,\r\n    flex: 5,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 10,\r\n    borderRadius: 12,\r\n  },\r\n  sortBtn: {\r\n    backgroundColor: colors.grey,\r\n    height: 50,\r\n    width: 50,\r\n    borderRadius: 12,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  mapBtn: {\r\n    backgroundColor: colors.grey,\r\n    height: 50,\r\n\r\n    width: 50,\r\n    borderRadius: 12,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  optionsCard: {\r\n    height: 210,\r\n    width: width / 2 - 30,\r\n    elevation: 15,\r\n    alignItems: \"center\",\r\n    backgroundColor: colors.white,\r\n    borderRadius: 20,\r\n    paddingTop: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n  optionsCardImage: {\r\n    height: 140,\r\n    borderRadius: 10,\r\n    width: \"100%\",\r\n  },\r\n  optionListsContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 20,\r\n    paddingHorizontal: 20,\r\n  },\r\n  categoryListText: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    paddingBottom: 5,\r\n    color: colors.grey,\r\n  },\r\n  activeCategoryListText: {\r\n    color: colors.dark,\r\n    borderBottomWidth: 1,\r\n    paddingBottom: 5,\r\n  },\r\n  categoryListContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 40,\r\n    paddingHorizontal: 40,\r\n  },\r\n  card: {\r\n    height: 250,\r\n    backgroundColor: colors.white,\r\n    elevation: 10,\r\n    width: width - 40,\r\n    marginRight: 20,\r\n    padding: 15,\r\n    borderRadius: 20,\r\n  },\r\n  cardImage: {\r\n    width: \"100%\",\r\n    height: 120,\r\n    borderRadius: 15,\r\n  },\r\n  facility: { flexDirection: \"row\", marginRight: 15 },\r\n  facilityText: { marginLeft: 5, color: colors.grey },\r\n});\r\nexport default HomeScreen;\r\n"]},"metadata":{},"sourceType":"module"}
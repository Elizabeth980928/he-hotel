{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Navigation } from \"react-native-web/dist/index\";\nimport { Button } from \"react-native-paper\";\nimport MapView from 'react-native-maps';\nimport signIn from \"./components/signIn/signIn\";\nimport getStarted from \"./components/getStarted/getStarted\";\nimport signup from \"./components/signUp/signUp\";\nimport mainContainer from \"./navigation/screens/MainContainer\";\nimport HistoryScreen from \"./navigation/screens/HistoryScreen\";\nimport BookingsScreen from \"./navigation/screens/BookingsScreen\";\nimport ProfileScreen from \"./navigation/screens/ProfileScreen\";\nimport DetailsScreen from \"./src/views/screens/DetailsScreen\";\nimport CheckOut from \"./src/views/screens/CheckOut\";\nimport Map from \"./src/views/screens/Map\";\nimport Payment from \"./src/views/screens/Payment\";\nimport colors from \"./components/colors\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Receipt from \"./components/Receipt\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: 'getStarted',\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: 'getStarted',\n        component: getStarted\n      }), _jsx(Stack.Screen, {\n        name: 'signIn',\n        component: signIn\n      }), _jsx(Stack.Screen, {\n        name: 'SignUp',\n        component: signup\n      }), _jsx(Stack.Screen, {\n        name: 'MainContainer',\n        component: mainContainer\n      }), _jsx(Stack.Screen, {\n        name: 'BookingsScreen',\n        component: BookingsScreen\n      }), _jsx(Stack.Screen, {\n        name: 'HistoryScreen',\n        component: HistoryScreen\n      }), _jsx(Stack.Screen, {\n        name: 'ProfileScreen',\n        component: ProfileScreen\n      }), _jsx(Stack.Screen, {\n        name: 'DetailsScreen',\n        component: DetailsScreen\n      }), _jsx(Stack.Screen, {\n        name: 'CheckOut',\n        component: CheckOut\n      }), _jsx(Stack.Screen, {\n        name: 'Map',\n        component: Map\n      }), _jsx(Stack.Screen, {\n        name: 'Payment',\n        component: Payment\n      }), _jsx(Stack.Screen, {\n        name: 'Receipt',\n        component: Receipt\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  image: {\n    height: 420,\n    width: \"100%\",\n    borderBottomLeftRadius: 100\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: \"bold\",\n    paddingLeft: 50,\n    fontStyle: \"italic\"\n  },\n  textStyle: {\n    fontSize: 20,\n    color: colors.grey,\n    fontStyle: \"italic\"\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/Client/Documents/GitHub/he-hotel/App.js"],"names":["React","Navigation","Button","MapView","signIn","getStarted","signup","mainContainer","HistoryScreen","BookingsScreen","ProfileScreen","DetailsScreen","CheckOut","Map","Payment","colors","NavigationContainer","createNativeStackNavigator","Receipt","Stack","App","headerShown","styles","StyleSheet","create","image","height","width","borderBottomLeftRadius","title","fontSize","fontWeight","paddingLeft","fontStyle","textStyle","color","grey"],"mappings":"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","sourcesContent":["\r\nimport React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  Image,\r\n  StatusBar,\r\n  View,\r\n  Text,\r\n  Navigation\r\n} from \"react-native\";\r\nimport { Button } from \"react-native-paper\";\r\n// import colors from '../colors';\r\nimport MapView from 'react-native-maps'\r\n\r\nimport signIn from './components/signIn/signIn';\r\nimport getStarted from './components/getStarted/getStarted';\r\nimport signup from './components/signUp/signUp';\r\n// import ForgotPassword from './components/ForgotPassword/forgotPassword';\r\nimport mainContainer from './navigation/screens/MainContainer';\r\nimport HistoryScreen from \"./navigation/screens/HistoryScreen\";\r\nimport BookingsScreen from \"./navigation/screens/BookingsScreen\";\r\nimport ProfileScreen from \"./navigation/screens/ProfileScreen\";\r\nimport DetailsScreen from \"./src/views/screens/DetailsScreen\";\r\nimport CheckOut from  \"./src/views/screens/CheckOut\";\r\nimport Map from './src/views/screens/Map';\r\nimport Payment from './src/views/screens/Payment';\r\n\r\n\r\nimport colors from './components/colors';\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\nimport Receipt from \"./components/Receipt\";\r\nconst Stack = createNativeStackNavigator()\r\nconst App = () => {\r\n  return (\r\n    <NavigationContainer>\r\n   <Stack.Navigator initialRouteName = { 'getStarted' } screenOptions={{headerShown:false}}>\r\n   <Stack.Screen name = { 'getStarted' } component={getStarted}/>\r\n   <Stack.Screen name = { 'signIn' } component={signIn}/>\r\n   <Stack.Screen name = { 'SignUp' } component={signup}/>\r\n   {/* <Stack.Screen name = { 'ForgotPassword' } component={ForgotPassword}/> */}\r\n   <Stack.Screen name = { 'MainContainer' } component={mainContainer}/>\r\n   <Stack.Screen name = { 'BookingsScreen' } component={BookingsScreen}/>\r\n   <Stack.Screen name = { 'HistoryScreen' } component={HistoryScreen}/>\r\n   <Stack.Screen name = { 'ProfileScreen' } component={ProfileScreen}/>\r\n   <Stack.Screen name = { 'DetailsScreen' } component={DetailsScreen}/>\r\n   <Stack.Screen name ={ 'CheckOut' } component={CheckOut}/>\r\n   <Stack.Screen name = { 'Map' } component={Map}/>\r\n   <Stack.Screen name ={ 'Payment' } component={Payment}/>\r\n   <Stack.Screen name ={ 'Receipt' } component={Receipt}/>\r\n   </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    height: 420,\r\n    width: \"100%\",\r\n    borderBottomLeftRadius: 100,\r\n  },\r\n\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: \"bold\",\r\n    paddingLeft: 50,\r\n    fontStyle: \"italic\",\r\n  },\r\n   textStyle: { fontSize: 20, color: colors.grey, fontStyle: \"italic\" },\r\n});\r\nexport default App;\r\n\r\n\r\n\r\n// import React, {Component} from 'react';\r\n// import {\r\n//   View,\r\n//   UIManager,\r\n//   StyleSheet,\r\n// } from 'react-native';\r\n\r\n// import {LogBox} from 'react-native';\r\n\r\n// LogBox.ignoreWarnings(['Warning: ...']);\r\n\r\n// UIManager.setLayoutAnimationEnabledExperimental(true);\r\n\r\n// import{ CreditCardInput } from 'react-native-credit-card-input';\r\n\r\n// export default class App extends Component {\r\n//   _onFocus = field => console.log('focusing', field)\r\n\r\n//   _onChange = formData => console.log(JSON.stringify(formData, null , ' '))\r\n//   render() {\r\n//     return (\r\n//       <View style={styles.container}>\r\n//         <CreditCardInput\r\n//           autoFocus\r\n//           requireName={true}\r\n//           requireCVC={true}\r\n//           requirePostalCode={true}\r\n//           validColor=\"black\"\r\n//           invalidColor=\"red\"\r\n//           placeholderColor=\"grey\"\r\n//           labelStyle={{color: 'black', fontSize: 12}}\r\n//           inputStyle={{color: 'black', fontSize: 16}}\r\n//           onFocus={this._onFocus}\r\n//           onChange={this._onChange}\r\n//         />\r\n//       </View>\r\n//     );\r\n//   }\r\n  \r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     marginTop: 5,\r\n//     backgroundColor: 'white',\r\n//   },\r\n// });\r\n\r\n\r\n//Map\r\n// import React, { useState } from \"react\";\r\n// import MapView, { PROVIDER_GOOGLE } from \"react-native-maps\";\r\n// import {\r\n//   StyleSheet,\r\n//   Text,\r\n//   View,\r\n//   Dimensions,\r\n//   TouchableOpacity,\r\n// } from \"react-native\";\r\n// import FontAwesome from \"@expo/vector-icons/FontAwesome\";\r\n\r\n// export default function Map() {\r\n//   const [dark, setDark] = useState(false);\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <MapView\r\n//         style={styles.map}\r\n//         provider={PROVIDER_GOOGLE}\r\n//         customMapStyle={dark ? mapStyle : null}\r\n//       >\r\n//         <TouchableOpacity\r\n//           onPress={() => setDark(!dark)}\r\n//           style={{\r\n//             backgroundColor: \"#FFF\",\r\n//             height: 30,\r\n//             borderRadius: 15,\r\n//             width: 30,\r\n//             alignItems: \"center\",\r\n//             justifyContent: \"center\",\r\n//             position: \"absolute\",\r\n//             marginTop: 60,\r\n//             alignSelf: \"flex-end\",\r\n//             right: 20,\r\n//           }}\r\n//         >\r\n//           <FontAwesome name=\"adjust\" size={30} />\r\n//         </TouchableOpacity>\r\n//       </MapView>\r\n//     </View>\r\n//   );\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     backgroundColor: \"#fff\",\r\n//     alignItems: \"center\",\r\n//     justifyContent: \"center\",\r\n//   },\r\n//   map: {\r\n//     width: Dimensions.get(\"window\").width,\r\n//     height: Dimensions.get(\"window\").height,\r\n//   },\r\n// });\r\n\r\n// const mapStyle = [\r\n//   {\r\n//     elementType: \"geometry\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#212121\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     elementType: \"geometry.fill\",\r\n//     stylers: [\r\n//       {\r\n//         saturation: -5,\r\n//       },\r\n//       {\r\n//         lightness: -5,\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     elementType: \"labels.icon\",\r\n//     stylers: [\r\n//       {\r\n//         visibility: \"off\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     elementType: \"labels.text.fill\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#757575\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     elementType: \"labels.text.stroke\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#212121\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"administrative\",\r\n//     elementType: \"geometry\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#757575\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"administrative.country\",\r\n//     elementType: \"labels.text.fill\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#9E9E9E\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"administrative.land_parcel\",\r\n//     stylers: [\r\n//       {\r\n//         visibility: \"off\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"administrative.locality\",\r\n//     elementType: \"labels.text.fill\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#BDBDBD\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"poi\",\r\n//     elementType: \"labels.text.fill\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#757575\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"poi.business\",\r\n//     stylers: [\r\n//       {\r\n//         visibility: \"off\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"poi.park\",\r\n//     elementType: \"geometry\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#181818\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"poi.park\",\r\n//     elementType: \"labels.text\",\r\n//     stylers: [\r\n//       {\r\n//         visibility: \"off\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"poi.park\",\r\n//     elementType: \"labels.text.fill\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#616161\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"poi.park\",\r\n//     elementType: \"labels.text.stroke\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#1B1B1B\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"road\",\r\n//     stylers: [\r\n//       {\r\n//         visibility: \"off\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"road\",\r\n//     elementType: \"geometry.fill\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#2C2C2C\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"road\",\r\n//     elementType: \"labels.text.fill\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#8A8A8A\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"road.arterial\",\r\n//     elementType: \"geometry\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#373737\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"road.highway\",\r\n//     elementType: \"geometry\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#3C3C3C\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"road.highway.controlled_access\",\r\n//     elementType: \"geometry\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#4E4E4E\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"road.local\",\r\n//     elementType: \"labels.text.fill\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#616161\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"transit\",\r\n//     elementType: \"labels.text.fill\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#757575\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"water\",\r\n//     elementType: \"geometry\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#000000\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     featureType: \"water\",\r\n//     elementType: \"labels.text.fill\",\r\n//     stylers: [\r\n//       {\r\n//         color: \"#3D3D3D\",\r\n//       },\r\n//     ],\r\n//   },\r\n// ];\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}